{-# OPTIONS -Wall #-}
module Hello where
import Foreign.C (CUInt (..), CString, withCStringLen)
import Foreign (Ptr, free, mallocBytes)

-- These are the JS functions that will be used
foreign import ccall "main.h displayHeader" cdisplayHeader :: CString -> CUInt -> IO ()
foreign import ccall "main.h jslog" cjslog :: CString -> CUInt -> IO ()

-- These are the haskell functions that will be called in JS (hsFree and mallocBytes are unused in this example)
foreign export ccall test :: IO ()
foreign export ccall mallocBytes :: Int -> IO (Ptr ());
foreign export ccall hsFree :: Ptr () -> IO ();

hsFree :: Ptr () -> IO ()
hsFree = free

strToJs :: (CString -> CUInt -> IO a) -> String -> IO a
strToJs func str = withCStringLen str (\(s, len) -> func s (fromIntegral len))

jslog :: String -> IO ()
jslog = strToJs cjslog

displayHeader :: String -> IO ()
displayHeader = strToJs cdisplayHeader

test :: IO ()
test = do
  displayHeader "This header was generated by Haskell! Open the console to see more."
  jslog "Hello from Haskell!"
